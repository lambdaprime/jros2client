plugins {
  id 'com.diffplug.spotless'
  id 'jacoco'
}

eclipse.classpath.file {
  // instruct eclipse plugin to put everything to module path
  whenMerged {
    entries.findAll { it.kind == 'lib' }.each { it.entryAttributes['module'] = 'true' }
  }
}

dependencies {
  testImplementation project(':jros2client')
  testImplementation 'io.github.lambdaprime:jrosclient.tests:7.0-SNAPSHOT'
  testImplementation 'io.github.lambdaprime:id.xfunctiontests:1.0-SNAPSHOT'
  testImplementation "io.github.lambdaprime:id.opentelemetry-exporters-pack:2.0"
  
  def junitVersion = "5.8.1"
  testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
  testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
  testRuntimeOnly "org.junit.platform:junit-platform-commons:1.7.0"
}

test {
  useJUnitPlatform()
  minHeapSize = "128m" // initial heap size
  maxHeapSize = "1400m" // maximum heap size

  testLogging {
    events "started", "failed"
  }
}

// run spotless and format code before the build
testClasses.dependsOn spotlessApply
